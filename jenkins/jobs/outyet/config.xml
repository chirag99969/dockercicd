<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>build and test outyet</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>http://gogs:3000/myuser/outyet.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>**</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>docker login --username=myuser --password=${DOCKER_PW} 127.0.0.1:5000
docker build -t 127.0.0.1:5000/myuser/outyet:build_${GIT_COMMIT} -f Dockerfile.build .
export CONTAINER=`docker create 127.0.0.1:5000/myuser/outyet:build_${GIT_COMMIT}`
docker cp ${CONTAINER}:/go/src/outyet/outyet .
docker build -t 127.0.0.1:5000/myuser/outyet:deploy_${GIT_COMMIT} -f Dockerfile.deploy .
docker push 127.0.0.1:5000/myuser/outyet:deploy_${GIT_COMMIT}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.33">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper>
      <varPasswordPairs>
        <varPasswordPair var="DOCKER_PW" password="{AQAAABAAAAAQPsrnwudV7N0BRRQ+IRNF0/1d/8mxd25ShRzPpe81b+U=}"/>
      </varPasswordPairs>
    </com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper>
  </buildWrappers>
</project>
